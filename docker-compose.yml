version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: drest_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: drest_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - drest_network

  # Redis (for API caching)
  redis:
    image: redis:7-alpine
    container_name: drest_redis
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - drest_network

  # PgAdmin (Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: drest_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@drest.sn
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - drest_network
    profiles:
      - dev

  # Redis Commander (Redis Management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: drest_redis_commander
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis_password
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - drest_network
    profiles:
      - dev

  # CMS Service (Development)
  cms-dev:
    build:
      context: ./drest-cms
      dockerfile: Dockerfile.dev
    container_name: drest_cms_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password@postgres:5432/drest_db?schema=public
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-change-in-production
      PORT: 3000
      CORS_ORIGIN: http://localhost:3000,http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./drest-cms:/app
      - /app/node_modules
      - cms_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - drest_network
    profiles:
      - dev
    restart: unless-stopped

  # API Service (Development)
  api-dev:
    build:
      context: ./drest-api
      dockerfile: Dockerfile.dev
    container_name: drest_api_dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password@postgres:5432/drest_db?schema=public
      REDIS_URL: redis://:redis_password@redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: dev-refresh-secret-change-in-production
      PORT: 3001
      CORS_ORIGIN: http://localhost:3000,http://localhost:3001
    ports:
      - "3001:3001"
    volumes:
      - ./drest-api:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - drest_network
    profiles:
      - dev
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  cms_uploads:
    driver: local

networks:
  drest_network:
    driver: bridge