"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const products_controller_1 = require("../controllers/products.controller");
const auth_middleware_1 = require("../middleware/auth.middleware");
const validation_middleware_1 = require("../middleware/validation.middleware");
const upload_middleware_1 = require("../middleware/upload.middleware");
const product_validator_1 = require("../validators/product.validator");
const client_1 = require("@prisma/client");
const router = (0, express_1.Router)();
const productsController = new products_controller_1.ProductsController();
router.get('/', (0, auth_middleware_1.requirePermission)('products.read'), productsController.getProducts);
router.get('/stats', (0, auth_middleware_1.requirePermission)('products.read'), productsController.getProductStats);
router.get('/search', (0, auth_middleware_1.requirePermission)('products.read'), productsController.searchProducts);
router.get('/category/:categoryId', (0, auth_middleware_1.requirePermission)('products.read'), productsController.getProductsByCategory);
router.get('/:id', (0, auth_middleware_1.requirePermission)('products.read'), productsController.getProduct);
router.get('/:id/variants', (0, auth_middleware_1.requirePermission)('products.read'), productsController.getProductVariants);
router.get('/:id/analytics', (0, auth_middleware_1.requirePermission)('products.read'), productsController.getProductAnalytics);
router.post('/', (0, auth_middleware_1.requirePermission)('products.create'), (0, validation_middleware_1.validateRequest)(product_validator_1.productValidators.create), productsController.createProduct);
router.post('/:id/duplicate', (0, auth_middleware_1.requirePermission)('products.create'), (0, validation_middleware_1.validateRequest)(product_validator_1.productValidators.duplicate), productsController.duplicateProduct);
router.post('/:id/variants', (0, auth_middleware_1.requirePermission)('products.create'), (0, validation_middleware_1.validateRequest)(product_validator_1.productValidators.createVariant), productsController.createProductVariant);
router.post('/import', (0, auth_middleware_1.requireRole)(client_1.AdminRole.ADMIN, client_1.AdminRole.SUPER_ADMIN), upload_middleware_1.uploadMiddleware.single('file'), productsController.importProducts);
router.put('/:id', (0, auth_middleware_1.requirePermission)('products.update'), (0, validation_middleware_1.validateRequest)(product_validator_1.productValidators.update), productsController.updateProduct);
router.patch('/:id/status', (0, auth_middleware_1.requirePermission)('products.update'), (0, validation_middleware_1.validateRequest)(product_validator_1.productValidators.updateStatus), productsController.updateProductStatus);
router.put('/:id/variants/:variantId', (0, auth_middleware_1.requirePermission)('products.update'), (0, validation_middleware_1.validateRequest)(product_validator_1.productValidators.updateVariant), productsController.updateProductVariant);
router.patch('/bulk-update', (0, auth_middleware_1.requirePermission)('products.update'), (0, validation_middleware_1.validateRequest)(product_validator_1.productValidators.bulkUpdate), productsController.bulkUpdateProducts);
router.delete('/:id', (0, auth_middleware_1.requirePermission)('products.delete'), productsController.deleteProduct);
router.delete('/:id/variants/:variantId', (0, auth_middleware_1.requirePermission)('products.delete'), productsController.deleteProductVariant);
router.get('/export/csv', (0, auth_middleware_1.requirePermission)('products.read'), productsController.exportProducts);
router.get('/export/excel', (0, auth_middleware_1.requirePermission)('products.read'), productsController.exportProducts);
exports.default = router;
//# sourceMappingURL=products.routes.js.map